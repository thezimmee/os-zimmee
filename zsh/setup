#!/usr/bin/env bash

if [ -z $OSZ_PATH ]; then
	read -e -p "[??] Where is OS Zimmee installed? " -i "~/Projects/os-zimmee" OSZ_PATH
fi

## Set up zsh as default shell.
if [[ $SHELL != /bin/zsh ]]; then
	echo "Changing default shell to ZSH..."
	chsh -s /bin/zsh
fi

## Ask to start fresh.
REFRESH=false
read -p "Remove all current zsh and prezto configuration and start fresh ('no' will link any missing zsh/prezto config files)? "
if [[ $REPLY =~ ^(yes|y)$ ]]; then
	REFRESH=true
	rm -rf ${OSZ_PATH}/zsh/zprezto.link || echo "Couldn't remove ${OSZ_PATH}/zsh/zprezto.link."
fi

## Add prezto submodule.
if [[ $REFRESH = true ]]; then
	git clone --recursive https://github.com/sorin-ionescu/prezto.git "${OSZ_PATH}/zsh/zprezto.link" && cd ${OSZ_PATH}/zsh/zprezto.link && git pull && git submodule update --init --recursive || echo "Error cloning prezto."
fi

## Set up prezto config files.
for rcfile in $(find ${OSZ_PATH}/zsh/zprezto.link/runcoms/* -name '*' -not -name 'README.md' -not -name 'zshrc' -not -name 'zpreztorc'); do
	dest="$HOME/.$(basename "${rcfile}")"
	echo "Setting up $rcfile..."
	if [[ $REFRESH = true ]]; then
		ln -sf "$rcfile" "$dest"
	else
		ln -s "$rcfile" "$dest" || echo "Skipped $rcfile."
	fi
done

## Symlink other *.link files.
for dotfile in $(find ${OSZ_PATH}/zsh/ -name '*.link*'); do
	dest="$HOME/.$(basename "${dotfile%.link*}")"
	echo "Setting up $dotfile..."
	if [[ $REFRESH = true ]]; then
		ln -sf "$dotfile" "$dest"
	else
		ln -s "$dotfile" "$dest" || echo "Skipped $dotfile."
	fi
done
