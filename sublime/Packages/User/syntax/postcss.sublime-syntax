%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: PostCSS
file_extensions:
  - pcss
  - postcss
scope: source.css.postcss
contexts:
  main:
    - match: /\*
      push:
        - meta_scope: comment.block.postcss
        - match: \*/
          pop: true
        - include: comment-tag
    - include: double-slash
    - include: double-quoted
    - include: single-quoted
    - include: interpolation
    - include: placeholder-selector
    - include: variable
    - include: variable-root-css
    - include: numeric
    - include: unit
    - include: flag
    - include: dotdotdot
    - match: "@include"
      captures:
        0: keyword.control.at-rule.css.postcss
      push:
        - meta_scope: support.function.name.postcss.library
        - match: '(?=\n|\(|{|;)'
          captures:
            0: keyword.control.at-rule.css.postcss
          pop: true
    - match: "@mixin|@function"
      captures:
        0: keyword.control.at-rule.css.postcss
      push:
        - meta_scope: support.function.name.postcss.no-completions
        - match: '$\n?|(?=\(|{)'
          captures:
            0: keyword.control.at-rule.css.postcss
          pop: true
        - match: '[\w-]+'
          scope: entity.name.function
    - match: '(?<=@import)\s[\w/.*-]+'
      scope: string.quoted.double.css.postcss
    - match: "@"
      push:
        - meta_scope: keyword.control.at-rule.css.postcss
        - match: $\n?|\s(?!(all|braille|embossed|handheld|print|projection|screen|speech|tty|tv|if|only|not)(\s|,))|(?=;)
          pop: true
    - match: "#"
      push:
        - meta_scope: entity.other.attribute-name.id.css.postcss
        - match: '$\n?|(?=\s|,|;|\(|\)|\.|\[|{|>)'
          pop: true
        - include: interpolation
        - include: pseudo-class
    - match: \.|(?<=&)(-|_)
      push:
        - meta_scope: entity.other.attribute-name.class.css.postcss
        - match: '$\n?|(?=\s|,|;|\(|\)|\[|{|>)'
          pop: true
        - include: interpolation
        - include: pseudo-class
    - match: '\['
      push:
        - meta_scope: entity.other.attribute-selector.postcss
        - match: '\]'
          pop: true
        - include: double-quoted
        - include: single-quoted
        - match: \^|\$|\*|~
          scope: keyword.other.regex.postcss
    - match: '(?<=\]|\)|not\(|\*|>|>\s):[a-z:-]+|(::|:-)[a-z:-]+'
      scope: entity.other.attribute-name.pseudo-class.css.postcss
    - match: ":"
      push:
        - meta_scope: meta.property-list.css.postcss
        - match: '$\n?|(?=;|\s\(|and\(|{|}|\),)'
          pop: true
        - include: double-slash
        - include: double-quoted
        - include: single-quoted
        - include: interpolation
        - include: variable
        - include: rgb-value
        - include: numeric
        - include: unit
        - include: flag
        - include: function
        - include: function-content
        - include: function-content-var
        - include: operator
        - include: parent-selector
        - include: property-value
    - include: rgb-value
    - include: function
    - include: function-content
    - match: '(?<!\-|\()\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|main|svg|rect|ruby|center|circle|ellipse|line|polyline|polygon|path|text|u|x)\b(?!-|\)|:\s)|&'
      push:
        - meta_scope: entity.name.tag.css.postcss.symbol
        - match: '(?=\s|,|;|\(|\)|\.|\[|{|>|-|_)'
          pop: true
        - include: interpolation
        - include: pseudo-class
    - include: operator
    - match: "[a-z-]+((?=:|#{))"
      scope: support.type.property-name.css.postcss
    - include: reserved-words
    - include: property-value
  comment-tag:
    - match: "{{"
      push:
        - meta_scope: comment.tags.postcss
        - match: "}}"
          pop: true
        - match: '[\w-]+'
          scope: comment.tag.postcss
  dotdotdot:
    - match: '\.{3}'
      scope: variable.other
  double-quoted:
    - match: '"'
      push:
        - meta_scope: string.quoted.double.css.postcss
        - match: '"'
          pop: true
        - include: quoted-interpolation
  double-slash:
    - match: //
      push:
        - meta_scope: comment.line.postcss
        - match: $
          pop: true
        - include: comment-tag
  flag:
    - match: "!(important|default|optional|global)"
      scope: keyword.other.important.css.postcss
  function:
    - match: '(?<=[\s|\(|,|:])(?!url|format|attr)[\w-][\w-]*(?=\()'
      scope: support.function.name.postcss
  function-content:
    - match: (?<=url\(|format\(|attr\().+?(?=\))
      scope: string.quoted.double.css.postcss
  function-content-var:
    - match: '(?<=var\()[\w-]+(?=\))'
      scope: variable.parameter.postcss
  interpolation:
    - match: "#{"
      push:
        - meta_scope: support.function.interpolation.postcss
        - match: "}"
          pop: true
        - include: variable
        - include: numeric
        - include: operator
        - include: unit
        - include: double-quoted
        - include: single-quoted
  numeric:
    - match: '(-|\.)?[0-9]+(\.[0-9]+)?'
      scope: constant.numeric.css.postcss
  operator:
    - match: \+|\s-\s|\s-(?=\$)|(?<=\()-(?=\$)|\s-(?=\()|\*|/|%|=|!|<|>|~
      scope: keyword.operator.postcss
  parent-selector:
    - match: "&"
      scope: entity.name.tag.css.postcss
  placeholder-selector:
    - match: (?<!\d)%(?!\d)
      push:
        - meta_scope: entity.other.attribute-name.placeholder-selector.postcss
        - match: '$\n?|\s|(?=;|{)'
          pop: true
  property-value:
    - match: '[\w-]+'
      scope: meta.property-value.css.postcss, support.constant.property-value.css.postcss
  pseudo-class:
    - match: ":[a-z:-]+"
      scope: entity.other.attribute-name.pseudo-class.css.postcss
  quoted-interpolation:
    - match: "#{"
      push:
        - meta_scope: support.function.interpolation.postcss
        - match: "}"
          pop: true
        - include: variable
        - include: numeric
        - include: operator
        - include: unit
  reserved-words:
    - match: \b(false|from|in|not|null|through|to|true)\b
      scope: support.type.property-name.css.postcss
  rgb-value:
    - match: '(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b'
      scope: constant.other.color.rgb-value.css.postcss
  single-quoted:
    - match: "'"
      push:
        - meta_scope: string.quoted.single.css.postcss
        - match: "'"
          pop: true
        - include: quoted-interpolation
  unit:
    - match: '(?<=[\d]|})(ch|cm|deg|dpcm|dpi|dppx|em|ex|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vw|%)'
      scope: keyword.other.unit.css.postcss
  variable:
    - match: '\$[\w-]+'
      scope: variable.parameter.postcss
  variable-root-css:
    - match: '(?<!&)--[\w-]+'
      scope: variable.parameter.postcss
