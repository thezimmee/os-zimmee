[
	/**
	 *  [[START]] UI INTERACTIONS
	----------------------------------------------------------------------------------------------------
	**/

	// Toggle word wrap.
	{ "keys": ["super+."], "command": "toggle_setting", "args": { "setting": "word_wrap" } },
	// Toggle sidebar.
	// { "keys": ["super+\\"], "command": "toggle_side_bar" },
	// { "keys": ["super+\\"], "command": "focus_file_on_sidebar" },
	{ "keys": ["super+;"], "command": "focus_file_on_sidebar" },
	// Toggle minimap.
	{ "keys": ["super+\\"], "command": "toggle_minimap" },
	// Toggle code folding buttons.
	{
		"keys": ["super+ctrl+'"],
		"command": "toggle_setting",
		"args": { "setting": "fade_fold_buttons" }
	},
	// Toggle focus on active pane.
	{
		"keys": ["super+ctrl+;"],
		"command": "toggle_focus_active_view"
	},
	// Toggle how whitespace is drawn.
	{
		"keys": ["super+shift+;"],
		"command": "cycle_setting",
		"args": { "setting": "draw_white_space", "options": ["all", "selection"] }
	},
	// Toggle indent guides.
	{
		"keys": ["super+alt+shift+;"],
		"command": "toggle_setting",
		"args": { "setting": "draw_indent_guides" }
	},
	// Toggle SublimeLinter highlights.
	{
		"keys": ["super+ctrl+l"],
		"command": "sublime_linter_toggle_highlights"
	},

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] TAB / PANE NAVIGATION
	----------------------------------------------------------------------------------------------------
	**/

	// Navigate between tabs.
	{ "keys": ["alt+l"], "command": "next_view" },
	{ "keys": ["alt+j"], "command": "prev_view" },
	// Navigate between panes.
	{ "keys": ["alt+o"], "command": "focus_neighboring_group" },
	{ "keys": ["alt+u"], "command": "focus_neighboring_group", "args": { "forward": false } },
	// Tab / pane manipulation.
	{ "keys": ["ctrl+shift+o"], "command": "move_to_neighboring_group" },
	{
		"keys": ["ctrl+shift+u"],
		"command": "move_to_neighboring_group",
		"args": { "forward": false }
	},
	// Move tab inside of pane.
	{ "keys": ["ctrl+j"], "command": "move_tab", "args": { "position": "-1" } },
	{ "keys": ["ctrl+l"], "command": "move_tab", "args": { "position": "+1" } },
	{ "keys": ["ctrl+k"], "command": "move_tab", "args": { "position": "999" } },
	{ "keys": ["ctrl+i"], "command": "move_tab", "args": { "position": "0" } },
	// Close pane.
	{ "keys": ["ctrl+-"], "command": "close_pane" },
	// Resize panes.
	{
		"keys": ["super+alt+shift+j"],
		"command": "resize_active_group",
		"args": { "direction": "left" }
	},
	{
		"keys": ["super+alt+shift+l"],
		"command": "resize_active_group",
		"args": { "direction": "right" }
	},
	{
		"keys": ["super+alt+shift+i"],
		"command": "resize_active_group",
		"args": { "direction": "up" }
	},
	{
		"keys": ["super+alt+shift+k"],
		"command": "resize_active_group",
		"args": { "direction": "down" }
	},

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] CODE NAVIGATION / SELECTION
	----------------------------------------------------------------------------------------------------
	**/

	// Word navigation / selection.
	{
		"keys": ["super+ctrl+left"],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": false }
	},
	{
		"keys": ["super+ctrl+right"],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": true }
	},
	// VIM-like navigation.
	{ "keys": ["ctrl+,"], "command": "move", "args": { "by": "subwords", "forward": false } },
	{ "keys": ["ctrl+."], "command": "move", "args": { "by": "subword_ends", "forward": true } },
	{ "keys": ["alt+,"], "command": "move", "args": { "by": "words", "forward": false } },
	{ "keys": ["alt+."], "command": "move", "args": { "by": "word_ends", "forward": true } },
	{
		"keys": ["super+ctrl+,"],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": false }
	},
	{
		"keys": ["super+ctrl+."],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": true }
	},
	{
		"keys": ["ctrl+shift+,"],
		"command": "move",
		"args": { "by": "subwords", "forward": false, "extend": true }
	},
	{
		"keys": ["ctrl+shift+."],
		"command": "move",
		"args": { "by": "subwords", "forward": true, "extend": true }
	},
	{
		"keys": ["alt+shift+,"],
		"command": "move",
		"args": { "by": "words", "forward": false, "extend": true }
	},
	{
		"keys": ["alt+shift+."],
		"command": "move",
		"args": { "by": "word_ends", "forward": true, "extend": true }
	},
	{
		"keys": ["ctrl+alt+,"],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": false }
	},
	{
		"keys": ["ctrl+alt+."],
		"command": "move_to_beg_of_contig_boundary",
		"args": { "forward": true }
	},
	// Expand selection.
	{ "keys": ["ctrl+shift+l"], "command": "expand_selection", "args": { "to": "line" } },
	{ "keys": ["ctrl+shift+p"], "command": "expand_selection_to_paragraph" },
	{ "keys": ["ctrl+shift+m"], "command": "expand_selection", "args": { "to": "brackets" } },
	{ "keys": ["ctrl+shift+j"], "command": "expand_selection", "args": { "to": "indentation" } },
	{ "keys": ["ctrl+shift+g"], "command": "expand_selection", "args": { "to": "tag" } },
	{ "keys": ["ctrl+shift+i"], "command": "expand_selection_to_quotes" },
	// { "keys": ["ctrl+shift+b"], "command": "expand_selection_to_brackets" },
	{ "keys": ["super+shift+space"], "command": "expand_region" },
	{
		"keys": ["super+ctrl+space"],
		"command": "expand_region",
		"args": { "undo": true },
		"context": [{ "key": "expand_region_soft_undo" }]
	},
	// { "keys": ["ctrl+space"], "command": "expand_selection_to_delims" },
	{ "keys": ["ctrl+delete"], "command": "delete_to_beg_next_contig_boundary" },
	// Code scrolling.
	{ "keys": ["alt+i"], "command": "scroll_lines", "args": { "amount": 1.0 } },
	{ "keys": ["alt+k"], "command": "scroll_lines", "args": { "amount": -1.0 } },
	// Find and replace.
	{
		"keys": ["super+h"],
		"command": "show_panel",
		"args": { "panel": "replace", "reverse": false }
	},
	// Number increment / decrement.
	{ "keys": ["super+alt+up"], "command": "inc_dec_value", "args": { "action": "inc_min" } },
	{ "keys": ["super+alt+down"], "command": "inc_dec_value", "args": { "action": "dec_min" } },
	{ "keys": ["super+shift+alt+up"], "command": "inc_dec_value", "args": { "action": "inc_max" } },
	{
		"keys": ["super+shift+alt+down"],
		"command": "inc_dec_value",
		"args": { "action": "dec_max" }
	},
	// Restore default bindings to `super+enter`.
	{
		"keys": ["super+enter"],
		"command": "run_macro_file",
		"args": { "file": "res://Packages/Default/Add Line.sublime-macro" }
	},
	{
		"keys": ["super+enter"],
		"command": "gs_commit_view_do_commit",
		"context": [
			{ "key": "setting.command_mode", "operator": "equal", "operand": false },
			{ "key": "setting.git_savvy.get_long_text_view", "operator": "equal", "operand": true },
			{ "key": "setting.git_savvy.commit_on_close", "operator": "equal", "operand": false }
		]
	},

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] CODE MANIPULATION
	----------------------------------------------------------------------------------------------------
	**/

	{ "keys": ["super+alt+/"], "command": "toggle_comment", "args": { "block": true } },

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] FILE BROWSING & MANIPULATION
	----------------------------------------------------------------------------------------------------
	**/

	// New file, relative to current view.
	{ "keys": ["super+n"], "command": "advanced_new_file_new" },
	{ "keys": ["super+alt+n"], "command": "new_file" },
	// Open file navigation.
	{ "keys": ["super+o"], "command": "fuzzy_start_from_file" },
	{ "keys": ["super+ctrl+o"], "command": "fuzzy_bookmarks_load" },
	{
		"keys": ["super+h"],
		"command": "fuzzy_toggle_hidden",
		"context": [{ "key": "fuzzy_toggle_hidden" }]
	},
	{
		"keys": ["super+n"],
		"command": "fuzzy_make_file",
		"context": [{ "key": "fuzzy_make_file" }]
	},
	// File path autocompletion.
	{ "keys": ["super+alt+."], "command": "file_system_comp_trigger" },
	// {
	// 	"keys": ["."],
	// 	"command": "run_multiple_commands",
	// 	"context": [
	// 		// { "key": "preceding_text", "operator": "regex_contains", "operand": "/.+?(?=')/" },
	// 		{ "key": "selector", "operator": "equal", "operand": "source string.quoted" }
	// 	],
	// 	"args": {
	// 		"commands": [
	// 			{ "command": "insert_snippet", "args": { "contents": "." } },
	// 			{ "command": "file_system_comp_trigger" }
	// 		]
	// 	}
	// },
	{
		"keys": ["."],
		"commands": "run_multiple_commands",
		"context": [{ "key": "selector", "operator": "equal", "operand": "source string.quoted" }],
		"args": {
			"commands": [
				{ "command": "insert_snippet", "args": { "contents": "." } },
				// { "command": "hide_auto_complete", "wait": 500 }
				{ "command": "file_system_comp_trigger" }
			]
		}
	},
	{
		"keys": ["/"],
		"command": "run_multiple_commands",
		"context": [
			{
				"key": "preceding_text",
				"operator": "regex_contains",
				"operand": ".+?(?=(\"|')(.)?(.)?)"
			},
			{ "key": "selector", "operator": "equal", "operand": "source string.quoted" }
		],
		"args": {
			"commands": [
				{ "command": "insert_snippet", "args": { "contents": "/" } },
				{ "command": "file_system_comp_trigger" }
			]
		}
	},
	// Open last closed file.
	{ "keys": ["super+shift+t"], "command": "reopen_last_file" },

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] GIT
	----------------------------------------------------------------------------------------------------
	**/

	// Git panes.
	{ "keys": ["super+alt+t"], "command": "gs_show_status" },
	{ "keys": ["super+alt+b"], "command": "gs_show_branch" },
	{ "keys": ["super+alt+g"], "command": "gs_log_graph" },

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] CUSTOM COMMANDS
	----------------------------------------------------------------------------------------------------
	**/

	// Open command palette with text selected.
	{ "keys": ["super+shift+p"], "command": "open_command_palette" },
	// Navigate linter errors.
	{ "keys": ["alt+down"], "command": "next_result" },
	{ "keys": ["alt+up"], "command": "prev_result" },
	// Restore Sublimerge commands.
	{
		"keys": ["alt+down"],
		"command": "sublimerge_go_down",
		"context": [
			{
				"key": "setting.is_sublimerge_view",
				"operator": "equal",
				"operand": true,
				"match_all": true
			}
		]
	},

	{
		"keys": ["alt+up"],
		"command": "sublimerge_go_up",
		"context": [
			{
				"key": "setting.is_sublimerge_view",
				"operator": "equal",
				"operand": true,
				"match_all": true
			}
		]
	},
	// Show Sublime console.
	{ "keys": ["ctrl+`"], "command": "show_panel", "args": { "panel": "console", "toggle": true } },

	/* [[END]] -------------------------------------------------------------------------------------- */

	/**
	 *  [[START]] COLORS
	----------------------------------------------------------------------------------------------------
	**/

	// Get color info (color needs to be selected).
	{ "keys": ["super+shift+i"], "command": "color_helper", "args": { "mode": "info" } },
	// Show color palettes.
	{ "keys": ["super+shift+alt+c"], "command": "color_helper", "args": { "mode": "palette" } },
	// Theme tweaker.
	{ "keys": ["super+k", "m"], "command": "toggle_theme_tweaker_mode" },
	{
		"keys": ["super+z"],
		"command": "theme_tweaker_undo",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+shift+z"],
		"command": "theme_tweaker_redo",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+delete"],
		"command": "theme_tweaker_clear",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["i"],
		"command": "theme_tweaker_brightness",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+" }
	},
	{
		"keys": ["k"],
		"command": "theme_tweaker_brightness",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-" }
	},
	{
		"keys": ["alt+i"],
		"command": "theme_tweaker_brightness",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+", "context": "fg" }
	},
	{
		"keys": ["alt+k"],
		"command": "theme_tweaker_brightness",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-", "context": "fg" }
	},
	{
		"keys": ["l"],
		"command": "theme_tweaker_saturation",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+" }
	},
	{
		"keys": ["j"],
		"command": "theme_tweaker_saturation",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-" }
	},
	{
		"keys": ["alt+l"],
		"command": "theme_tweaker_saturation",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+", "context": "fg" }
	},
	{
		"keys": ["alt+j"],
		"command": "theme_tweaker_saturation",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-", "context": "fg" }
	},
	{
		"keys": ["shift+j"],
		"command": "theme_tweaker_hue",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-" }
	},
	{
		"keys": ["shift+l"],
		"command": "theme_tweaker_hue",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+" }
	},
	{
		"keys": ["alt+shift+j"],
		"command": "theme_tweaker_hue",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "-", "context": "fg" }
	},
	{
		"keys": ["alt+shift+l"],
		"command": "theme_tweaker_hue",
		"context": [{ "key": "theme_tweaker" }],
		"args": { "direction": "+", "context": "fg" }
	},
	{
		"keys": ["super+i"],
		"command": "theme_tweaker_invert",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+c"],
		"command": "theme_tweaker_colorize",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+s"],
		"command": "theme_tweaker_sepia",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+g"],
		"command": "theme_tweaker_grayscale",
		"context": [{ "key": "theme_tweaker" }]
	},
	{
		"keys": ["super+l"],
		"command": "theme_tweaker_glow",
		"context": [{ "key": "theme_tweaker" }]
	}

	/* [[END]] -------------------------------------------------------------------------------------- */
]
