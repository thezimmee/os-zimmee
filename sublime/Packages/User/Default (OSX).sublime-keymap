[
    /**-------------------------------------------------------------------------
     * TOGGLES.
     */

    // Toggle word wrap.
    { "keys": ["super+."], "command": "toggle_setting", "args": { "setting": "word_wrap" } },

    // Toggle sidebar.
    { "keys": ["super+;"], "command": "focus_file_on_sidebar" },

    // Toggle minimap.
    { "keys": ["super+\\"], "command": "toggle_minimap" },

    // Toggle code folding buttons.
    {
        "keys": ["super+ctrl+'"],
        "command": "toggle_setting",
        "args": { "setting": "fade_fold_buttons" }
    },

    // Toggle focus on active pane.
    {
        "keys": ["super+ctrl+;"],
        "command": "toggle_focus_active_view"
    },

    // Toggle how whitespace is drawn.
    {
        "keys": ["super+shift+;"],
        "command": "cycle_setting",
        "args": { "setting": "draw_white_space", "options": ["all", "selection"] }
    },

    // Toggle indent guides.
    {
        "keys": ["super+alt+shift+;"],
        "command": "toggle_setting",
        "args": { "setting": "draw_indent_guides" }
    },

    // Toggle draw centered.
    {
        "keys": ["super+alt+shift+/"],
        "command": "toggle_setting",
        "args": { "setting": "draw_centered" }
    },

    // Toggle SublimeLinter highlights.
    {
        "keys": ["super+ctrl+l"],
        "command": "sublime_linter_toggle_highlights"
    },

    // Toggle comment.
    { "keys": ["super+alt+/"], "command": "toggle_comment", "args": { "block": true } },

    // Toggle overwrite cursor.
    { "keys": ["super+alt+i"], "command": "toggle_overwrite" },

    /**-------------------------------------------------------------------------
     * Tabs and Panes.
     */

    // Navigate between tabs.
    { "keys": ["alt+l"], "command": "next_view" },
    { "keys": ["alt+j"], "command": "prev_view" },

    // Navigate between panes.
    { "keys": ["alt+o"], "command": "focus_neighboring_group" },
    { "keys": ["alt+u"], "command": "focus_neighboring_group", "args": { "forward": false } },

    // Move tab inside of pane.
    { "keys": ["ctrl+j"], "command": "move_tab", "args": { "position": "-1" } },
    { "keys": ["ctrl+l"], "command": "move_tab", "args": { "position": "+1" } },
    { "keys": ["ctrl+k"], "command": "move_tab", "args": { "position": "999" } },
    { "keys": ["ctrl+i"], "command": "move_tab", "args": { "position": "0" } },

    // Move tab to neighoring group.
    { "keys": ["ctrl+shift+o"], "command": "move_to_neighboring_group" },
    {
        "keys": ["ctrl+shift+u"],
        "command": "move_to_neighboring_group",
        "args": { "forward": false }
    },

    // Close pane.
    { "keys": ["ctrl+-"], "command": "close_pane" },

    // Resize panes.
    {
        "keys": ["super+alt+shift+j"],
        "command": "resize_active_group",
        "args": { "direction": "left" }
    },
    {
        "keys": ["super+alt+shift+l"],
        "command": "resize_active_group",
        "args": { "direction": "right" }
    },
    {
        "keys": ["super+alt+shift+i"],
        "command": "resize_active_group",
        "args": { "direction": "up" }
    },
    {
        "keys": ["super+alt+shift+k"],
        "command": "resize_active_group",
        "args": { "direction": "down" }
    },

    /**-------------------------------------------------------------------------
     * Code navigation and selection.
     */

    // Select by scope.
    { "keys": ["super+shift+space"], "command": "expand_selection", "args": { "to": "scope" } },
    { "keys": ["ctrl+shift+space"], "command": "expand_selection", "args": { "to": "scope" } },
    { "keys": ["super+ctrl+space"], "command": "soft_undo" },
    { "keys": ["ctrl+shift+l"], "command": "expand_selection", "args": { "to": "line" } },
    { "keys": ["ctrl+shift+p"], "command": "expand_selection_to_paragraph" },
    { "keys": ["ctrl+shift+m"], "command": "expand_selection", "args": { "to": "brackets" } },
    { "keys": ["ctrl+shift+j"], "command": "expand_selection", "args": { "to": "indentation" } },
    { "keys": ["ctrl+shift+g"], "command": "expand_selection", "args": { "to": "tag" } },
    { "keys": ["ctrl+delete"], "command": "delete_to_beg_next_contig_boundary" },

    // Word navigation / selection.
    // {
    //     "keys": ["super+ctrl+left"],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": false }
    // },
    // {
    //     "keys": ["super+ctrl+right"],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": true }
    // },

    // VIM-like navigation.
    // { "keys": ["ctrl+,"], "command": "move", "args": { "by": "subwords", "forward": false } },
    // { "keys": ["ctrl+."], "command": "move", "args": { "by": "subword_ends", "forward": true } },
    // { "keys": ["alt+,"], "command": "move", "args": { "by": "words", "forward": false } },
    // { "keys": ["alt+."], "command": "move", "args": { "by": "word_ends", "forward": true } },
    // {
    //     "keys": ["super+ctrl+,"],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": false }
    // },
    // {
    //     "keys": ["super+ctrl+."],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": true }
    // },
    // {
    //     "keys": ["ctrl+shift+,"],
    //     "command": "move",
    //     "args": { "by": "subwords", "forward": false, "extend": true }
    // },
    // {
    //     "keys": ["ctrl+shift+."],
    //     "command": "move",
    //     "args": { "by": "subwords", "forward": true, "extend": true }
    // },
    // {
    //     "keys": ["alt+shift+,"],
    //     "command": "move",
    //     "args": { "by": "words", "forward": false, "extend": true }
    // },
    // {
    //     "keys": ["alt+shift+."],
    //     "command": "move",
    //     "args": { "by": "word_ends", "forward": true, "extend": true }
    // },
    // {
    //     "keys": ["ctrl+alt+,"],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": false }
    // },
    // {
    //     "keys": ["ctrl+alt+."],
    //     "command": "move_to_beg_of_contig_boundary",
    //     "args": { "forward": true }
    // },

    // Scroll.
    { "keys": ["alt+i"], "command": "scroll_lines", "args": { "amount": 1.0 } },
    { "keys": ["alt+k"], "command": "scroll_lines", "args": { "amount": -1.0 } },

    // // Find and replace.
    // {
    //     "keys": ["super+h"],
    //     "command": "show_panel",
    //     "args": { "panel": "replace", "reverse": false }
    // },

    /**-------------------------------------------------------------------------
     * File/Folder Browsing and Manipulation.
     */

    // Create file.
    { "keys": ["super+n"], "command": "fm_create" },
    { "keys": ["super+alt+n"], "command": "new_file" },

    // Open file from current directory.
    { "keys": ["super+o"], "command": "fuzzy_start_from_file" },

    // Open favorite bookmarked paths.
    { "keys": ["super+ctrl+o"], "command": "fuzzy_bookmarks_load" },

    // Default Sublime open dialog.
    { "keys": ["super+alt+o"], "command": "prompt_open" },
    // {
    //     "keys": ["super+o"],
    //     "command": "fm_create",
    //     "args": {
    //         "paths": ["./"],
    //         // "initial_text": "."
    //         "start_with_browser": true,
    //         "no_browser_action": true
    //     }
    // },

    // Open file path in Alfred.
    {
        "keys": ["super+shift+o"],
        "command": "send_code",
        "args": {
            "cmd": "osascript -e 'tell application \"Alfred 3\" to search \"$file_path\"';"
        }
    },

    // Open last closed file.
    { "keys": ["super+shift+t"], "command": "reopen_last_file" },

    /**-------------------------------------------------------------------------
     * Colors.
     */

    // Get color info (color needs to be selected).
    { "keys": ["super+shift+i"], "command": "color_helper", "args": { "mode": "info" } },

    // Show color palettes.
    { "keys": ["super+shift+alt+c"], "command": "color_helper", "args": { "mode": "palette" } },

    /**-------------------------------------------------------------------------
     * Linting.
     */

    // Navigate linter errors.
    { "keys": ["alt+down"], "command": "next_result" },
    { "keys": ["alt+up"], "command": "prev_result" },

    /**-------------------------------------------------------------------------
     * Custom Commands.
     */

    // @todo Disabled on 10/8/2018.
    // // Open command palette with text selected.
    // { "keys": ["super+shift+p"], "command": "open_command_palette" },

    // @todo Disabled on 10/8/2018.
    // // Show Sublime console.
    // { "keys": ["ctrl+`"], "command": "show_panel", "args": { "panel": "console", "toggle": true } },

    /**-------------------------------------------------------------------------
     * Git and File Diffing and Merging.
     */

    // Git panes.
    { "keys": ["super+alt+t"], "command": "gs_show_status" },
    { "keys": ["super+alt+b"], "command": "gs_show_branch" },
    { "keys": ["super+alt+g"], "command": "gs_log_graph" },

    // Restore Sublimerge commands.
    {
        "keys": ["alt+down"],
        "command": "sublimerge_go_down",
        "context": [
            {
                "key": "setting.is_sublimerge_view",
                "operator": "equal",
                "operand": true,
                "match_all": true
            }
        ]
    },
    {
        "keys": ["alt+up"],
        "command": "sublimerge_go_up",
        "context": [
            {
                "key": "setting.is_sublimerge_view",
                "operator": "equal",
                "operand": true,
                "match_all": true
            }
        ]
    },

    /**-------------------------------------------------------------------------
     * Comments.
     */

    {
        "keys": ["shift+alt+q"],
        "command": "doxy_update_comments",
        "args": { "reparse": true, "new_style": "roll_2" },
        "context": [
            {
                "key": "selector",
                "operator": "equal",
                "operand":
                    "comment, string.quoted.double.block.cython, string.quoted.single.block.cython, string.quoted.double.block.python, string.quoted.single.block.python, string.quoted.docstring.multi.python",
                "match_all": true
            }
        ]
    },

    /**-------------------------------------------------------------------------
     * Emmet HTML/CSS utilities.
     */

    // Interactive expansion.
    { "keys": ["super+ctrl+enter"], "command": "expand_as_you_type" },
    // Emmet balance.
    {
        "keys": ["ctrl+k"],
        "command": "run_emmet_action",
        "args": { "action": "balance_inward" }
    },

    // Number increment / decrement.
    {
        "keys": ["super+alt+up"],
        "command": "run_emmet_action",
        "args": {
            "action": "increment_number_by_1"
        }
    },
    {
        "keys": ["super+alt+down"],
        "command": "run_emmet_action",
        "args": {
            "action": "decrement_number_by_1"
        }
    },
    {
        "keys": ["super+alt+ctrl+up"],
        "command": "run_emmet_action",
        "args": {
            "action": "increment_number_by_01"
        }
    },
    {
        "keys": ["super+alt+ctrl+down"],
        "command": "run_emmet_action",
        "args": {
            "action": "decrement_number_by_01"
        }
    },
    {
        "keys": ["super+alt+shift+up"],
        "command": "run_emmet_action",
        "args": {
            "action": "increment_number_by_10"
        }
    },
    {
        "keys": ["super+alt+shift+down"],
        "command": "run_emmet_action",
        "args": {
            "action": "decrement_number_by_10"
        }
    },

    // Restore default bindings to `super+enter`.
    {
        "keys": ["super+enter"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Add Line.sublime-macro" }
    },
    {
        "keys": ["super+enter"],
        "command": "gs_commit_view_do_commit",
        "context": [
            { "key": "setting.command_mode", "operator": "equal", "operand": false },
            { "key": "setting.git_savvy.get_long_text_view", "operator": "equal", "operand": true },
            { "key": "setting.git_savvy.commit_on_close", "operator": "equal", "operand": false }
        ]
    }
]
