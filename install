#!/usr/bin/env bash
#
# installs and configures OS Zimmee
# NOT self contained; must be called from ./bootstrap script

install_homebrew () {
    # exit if already installed
    if [[ $(type -t brew) ]]; then
        log "Homebrew already installed."
        return 0
    fi

    log "Installing homebrew..."
    exit

    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    for tap in "${CONFIG__brew_taps[@]}"; do
        brew tap "${tap}"
    done

    # fix permissions (see http://digitizor.com/fix-homebrew-permissions-osx-el-capitan/)
    sudo chown $(whoami):admin /usr/local && sudo chown -R $(whoami):admin /usr/local
}

install_brew () {
    local app="$1"
    echo ''
    log "Installing ${app} (with brew)..." important
    brew install "$app"
}

install_cask () {
    local app="$1"
    echo ''
    log "Installing ${app} (with brew cask)..." important
    brew cask install "$app"
}

install_homebrew_apps () {
    # install apps
    local count_installed=0 count_skipped=0 count_errors=0 count_total=0

    # install brew apps
    for app in "${CONFIG__brew_apps[@]}"; do
        ((count_total++))
        if brew list -1 | grep -q "${app##*/}"; then
            log "${app} already installed."
            ((count_skipped++))
        else
            install_brew "$app" && ((count_installed++)) || ((count_errors++))
        fi
    done
    # install cask apps
    for app in "${CONFIG__cask_apps[@]}"; do
        ((count_total++))
        if brew cask list -1 | grep -q "${app##*/}"; then
            log "${app} already installed."
            ((count_skipped++))
        else
            install_cask "$app" && ((count_installed++)) || ((count_errors++))
        fi
    done

    log "${BLUE}${count_total}${END}${BOLD} app(s) checked.\n${INDENT}${GREEN}${count_installed}${END}${BOLD} app(s) installed.\n${INDENT}${GREEN}${count_skipped}${END}${BOLD} app(s) already installed.\n${INDENT}${RED}${count_installed}${END}${BOLD} app(s) NOT installed." important
}

# install homebrew & apps
install_homebrew || fail "Something went wrong with installing Homebrew..." true
install_homebrew_apps || fail "Something went wrong with installing Homebrew apps..." true