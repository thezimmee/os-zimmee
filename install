#!/usr/bin/env bash
#
# installs and configures OS Zimmee

install_homebrew () {
    # exit if already installed
    if $(command -v brew); then
        log "Homebrew already installed."
        return 1
    fi

    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    for tap in "${CONFIG__brew_taps[@]}"; do
        brew tap "${tap}"
    done

    # fix permissions (see http://digitizor.com/fix-homebrew-permissions-osx-el-capitan/)
    sudo chown $(whoami):admin /usr/local && sudo chown -R $(whoami):admin /usr/local
}

install_homebrew_apps () {
    # install apps
    local count_installed=0 count_skipped=0 count_total=0

    # install brew apps
    for app in "${CONFIG__brew_apps[@]}"; do
        ((count_total++))
        if brew list -1 | grep -q "${app##*/}"; then
            log "${app} already installed."
            ((count_skipped++))
        else
            echo ''
            log "Installing ${app} (with Homebrew)..." important
            brew install "$app"
            ((count_installed++))
        fi
    done
    # install cask apps
    for app in "${CONFIG__cask_apps[@]}"; do
        ((count_total++))
        if brew cask list -1 | grep -q "${app##*/}"; then
            log "${app} already installed."
            ((count_skipped++))
        else
            echo ''
            log "Installing ${app} (with Homebrew cask)..." important
            brew cask install "$app"
            ((count_installed++))
        fi
    done

    log "${BLUE}${count_installed}${END_COLOR} app(s) installed; ${BLUE}${count_skipped}${END_COLOR} were skipped (${BLUE}${count_total}${END_COLOR} total)." important

    brew update && brew upgrade && brew doctor
}

install_node_packages () {
    # Update npm and install global modules.
    local count_installed=0 count_skipped=0
    for package in "${CONFIG__npm_globals[@]}"; do
        if test $(npm list "${package}"); then
            echo ''
            log "Installing npm package: ${package}..."
            npm install -g "${package}"
            (($count_installed++))
        else
            log "${package} already installed."
            ((count_skipped++))
        fi
    done

    log "${BLUE}${count_installed}${END_COLOR} npm packages installed; ${BLUE}${count_skipped}${END_COLOR} already installed."
}

# install homebrew & apps
install_homebrew || fail "Something went wrong with installing Homebrew..." true
install_homebrew_apps || fail "Something went wrong with installing Homebrew apps..." true
install_node_packages || fail "Something went wrong with installing node packages..." true