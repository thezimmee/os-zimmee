// create a session config

// defaults
kwmc=/Users/thezimmee/Applications/kwm/bin/kwmc
dir=$HOME
terminal="Terminal"
save=$HOME"/.kwm/sessions/"

// args
while getopts ":d:T:a:f:u:t:e:c:h" opt
do
case $opt in
    d)
    dir="$OPTARG"
    ;;
    T)
	terminal="$OPTARG"
	;;
    a)
    apps+=("$OPTARG")
    ;;
    f)
    files+=("$OPTARG")
    ;;
    u)
	urls+=("$OPTARG")
	;;
	t)
	terms+=("$OPTARG")
	;;
	e)
	editors+=("$OPTARG")
	;;
	c)
	commands+=("$OPTARG")
	;;
    h)
    help=true
    ;;
esac
done

shift $((OPTIND-1))
name="$1"

// show help
if [[ -z "$name" ]] || [[ $help == true ]]
then
cat << EOF

    usage: createsession --option "value" --option "value" sessionname(required)

    Options:

    Define once:
    -d	<path>		Working directory (default: $HOME)
    -T	<app name>	Set terminal app to use (default: Terminal)

    Multiple allowed:
    (eg. -a "App" -a "App")
    (pass 'dir' for paths to indicate working dir.)
    -a	<app name>	Specify an app to open
    -f	<path>		Open file/folder with default app
    -u	<url>		Open url in default browser
    -t	<path>		Open terminal at directory
    -e	<path>		Open file/folder with $EDITOR
    -c	<command>	Run commands on session start.

    Other:
    -h 	none		Display this text and exit

EOF
exit 1
fi

// create session config
savefile=$save$name
> $savefile

echo "dir $dir" >> $savefile
echo "terminal $terminal" >> $savefile

for ((i = 0; i < ${#apps[@]}; i++))
do
	echo "app ${apps[$i]}" >> $savefile
done

for ((i = 0; i < ${#files[@]}; i++))
do
	if [[ "${files[$i]}" == "dir" ]]
	then
		files[$i]="$dir"
	fi
	echo "file ${files[$i]}" >> $savefile
done

for ((i = 0; i < ${#urls[@]}; i++))
do
	echo "url ${urls[$i]}" >> $savefile
done

for ((i = 0; i < ${#terms[@]}; i++))
do
	if [[ "${terms[$i]}" == "dir" ]]
	then
		terms[$i]="$dir"
	fi
	echo "term ${terms[$i]}" >> $savefile
done

for ((i = 0; i < ${#editors[@]}; i++))
do
	if [[ "${editors[$i]}" == "dir" ]]
	then
		editors[$i]="$dir"
	fi
	echo "editor ${editors[$i]}" >> $savefile
done

for ((i = 0; i < ${#commands[@]}; i++))
do
	echo "command ${commands[$i]}" >> $savefile
done
